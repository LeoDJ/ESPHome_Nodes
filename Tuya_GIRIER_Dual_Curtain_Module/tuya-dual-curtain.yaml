esphome:
  name: tuya-dual-curtain
  friendly_name: tuya-dual-curtain

libretiny:
  board: generic-bk7231n-qfn32-tuya
  framework:
    version: dev

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "YOURENCRYPTIONKEY"

ota:
  password: "YOUROTAPASSWORD"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: "Tuya-Dual-Curtain"
    password: "YOURFALLBACKPASSWORD"

captive_portal:
  
web_server:
  port: 80

# Constants
substitutions: 
  after_run_interval: 10s   # how long to keep the relays on after the motor has stopped

cover:
  - platform: time_based
    name: "Cover A"
    open_duration: 60s
    close_duration: 30s
    id: cover_a
    has_built_in_endstop: True
    open_action:
      - switch.turn_off: a_close
      - switch.turn_on: a_open
    close_action:
      - switch.turn_off: a_open
      - switch.turn_on: a_close
    stop_action:
      - switch.turn_off: a_open
      - switch.turn_off: a_close
  - platform: time_based
    name: "Cover B"
    open_duration: 60s
    close_duration: 30s
    id: cover_b
    has_built_in_endstop: True
    open_action:
      - switch.turn_off: b_close
      - switch.turn_on: b_open
    close_action:
      - switch.turn_off: b_open
      - switch.turn_on: b_close
    stop_action:
      - switch.turn_off: b_open
      - switch.turn_off: b_close

light:
  - platform: status_led
    pin: P9
    name: "Status LED"

binary_sensor:
  - platform: gpio
    id: s1
    name: "S1"                  # Comment out names to hide inputs from HomeAssistant
    pin: 
      number: P26
      inverted: True
    on_press:
      - switch.toggle: reboot   # Built-in button resets the MCU
  - platform: gpio
    id: s2
    name: "S2"
    pin: 
      number: P6
      inverted: True
  - platform: gpio
    id: s3
    name: "S3"
    pin: 
      number: P7
      inverted: True
  - platform: gpio
    id: s4
    name: "S4"
    pin: 
      number: P8
      inverted: True

switch:
  - platform: gpio
    pin: P20  # L1
    id: a_open
    name: "A Open Manual"   # Comment out names to hide switches from HomeAssistant
  - platform: gpio
    pin: P28  # L2
    id: a_close
    name: "A Close Manual"
  - platform: gpio
    pin: P17  # L3
    id: b_open
    name: "B Open Manual"
  - platform: gpio
    pin: P16  # L4
    id: b_close
    name: "B Close Manual"
  - platform: restart
    id: reboot


interval:
  # manual_control is weird and has_built_in_endstop leaves the relays turned on unnecessarily
  # So this automation turns off the relays when the cover stopped moving for some time
  - interval: 1s
    then:
      - if: 
          condition:
            and:
              - or: # only execute, when a relay is still on (otherwise it would spam the turn_off command)
                - for:
                    time: $after_run_interval
                    condition:
                      switch.is_on: a_open
                - for:
                    time: $after_run_interval
                    condition:
                      switch.is_on: a_close
              - for:
                  time: $after_run_interval
                  condition:
                    lambda: 'return id(cover_a).current_operation == CoverOperation::COVER_OPERATION_IDLE;'
          then:
            cover.stop: cover_a
      - if: 
          condition:
            and:
              - or: # only execute, when a relay is still on (otherwise it would spam the turn_off command)
                - for:
                    time: $after_run_interval
                    condition:
                      switch.is_on: b_open
                - for:
                    time: $after_run_interval
                    condition:
                      switch.is_on: b_close
              - for:
                  time: $after_run_interval
                  condition:
                    lambda: 'return id(cover_b).current_operation == CoverOperation::COVER_OPERATION_IDLE;'
          then:
            cover.stop: cover_b